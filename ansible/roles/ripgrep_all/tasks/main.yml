- name: Check if ripgrep-all binaries are already installed
  ansible.builtin.stat:
    path: "{{ user_bin_dir }}/{{ item }}"
  register: ripgrep_all_binaries_stat
  loop: "{{ ripgrep_all_binaries }}"

- name: Set fact for whether all binaries exist
  ansible.builtin.set_fact:
    all_binaries_exist: "{{ (ripgrep_all_binaries_stat.results | map(attribute='stat.exists') | list | min) | bool }}"

- name: Install ripgrep-all if not present
  when: not all_binaries_exist
  block:
    - name: Install dependencies
      ansible.builtin.apt:
        name: [pandoc, poppler-utils]
        state: present
      become: true

    - name: Get latest ripgrep-all version
      ansible.builtin.uri:
        url: "{{ ripgrep_all_latest_version_url }}"
        return_content: true
      register: ripgrep_all_api_response

    - name: Set ripgrep-all version fact
      ansible.builtin.set_fact:
        ripgrep_all_version: "{{ (ripgrep_all_api_response.json.tag_name | regex_replace('^v', '')) }}"

    - name: Download ripgrep-all binary if not present
      ansible.builtin.get_url:
        url: "{{ ripgrep_all_download_url }}"
        dest: "{{ tmp_downloads_dir }}/{{ ripgrep_all_archive }}"
        mode: '644'

    - name: Unarchive ripgrep-all binary if not present
      ansible.builtin.unarchive:
        src: "{{ tmp_downloads_dir }}/{{ ripgrep_all_archive }}"
        dest: "{{ tmp_extracts_dir }}"
        remote_src: true

    - name: Move rga binaries to {{ user_bin_dir }}
      become: true
      ansible.builtin.copy:
        src: "{{ tmp_extracts_dir }}/{{ ripgrep_all_extract_dir }}/{{ item }}"
        dest: "{{ user_bin_dir }}/{{ item }}"
        mode: '755'
        remote_src: true
      loop: "{{ ripgrep_all_binaries }}"


- name: Symlink rga binaries to {{ user_local_bin }}
  ansible.builtin.file:
    src: "{{ user_bin_dir }}/{{ item }}"
    dest: "{{ user_local_bin }}/{{ item }}"
    state: link
    force: true
  loop: "{{ ripgrep_all_binaries }}"
