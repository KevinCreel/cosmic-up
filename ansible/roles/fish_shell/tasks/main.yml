# Install Fish shell
- name: Install Fish
  ansible.builtin.apt:
    name: fish
    state: present
  become: true

# Create Fish configuration directories
- name: Create Fish config directory
  ansible.builtin.file:
    path: "{{ user_config_dir }}/fish"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: '755'

- name: Create conf.d directory
  ansible.builtin.file:
    path: "{{ user_config_dir }}/fish/conf.d"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: '755'

# Copy Fish configuration files
- name: Copy xdg.fish config
  ansible.builtin.copy:
    src: files/xdg.fish
    dest: "{{ user_config_dir }}/fish/conf.d/xdg.fish"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: '0644'

# Create local bin directory
- name: Create local bin directory
  ansible.builtin.file:
    path: "{{ user_local_dir }}/bin"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: '0755'

# Find binary paths for symlinks
- name: Find fdfind binary pathsd
  ansible.builtin.command: "which fdfind"
  register: fdfind_path
  changed_when: false

- name: Find batcat binary path
  ansible.builtin.command: "which batcat"
  register: batcat_path
  changed_when: false

# Create symlinks for fd
- name: Create fd symlink
  ansible.builtin.file:
    src: "{{ fdfind_path.stdout }}"
    dest: "{{ user_local_dir }}/bin/fd"
    state: link
    force: false

# Create symlink for batcat
- name: Create bat symlink
  ansible.builtin.file:
    src: "{{ batcat_path.stdout }}"
    dest: "{{ user_local_dir }}/bin/bat"
    state: link
    force: false

# Install FZF fuzzy finder
- name: Check if fzf is installed
  ansible.builtin.command: which fzf
  register: fzf_check
  changed_when: false
  failed_when: false

- name: Clone fzf repository
  ansible.builtin.git:
    repo: 'https://github.com/junegunn/fzf.git'
    dest: "{{ tmp_downloads_dir }}/fzf"
    version: master
  when: fzf_check.rc != 0

- name: Install fzf
  ansible.builtin.command: "{{ tmp_downloads_dir }}/fzf/install --no-key-bindings --no-completion --no-update-rc --bin"
  args:
    chdir: "{{ tmp_downloads_dir }}/fzf"
    creates: "{{ tmp_downloads_dir }}/fzf/bin/fzf"
  when: fzf_check.rc != 0

- name: Copy fzf binary to local bin
  become: true
  ansible.builtin.copy:
    src: "{{ tmp_downloads_dir }}/fzf/bin/fzf"
    dest: "/usr/bin/fzf"
    mode: '0755'
    remote_src: true
  when: fzf_check.rc != 0

- name: Symlink fzf to local bin
  ansible.builtin.file:
    src: "/usr/bin/fzf"
    dest: "{{ user_local_dir }}/bin/fzf"
    state: link
    force: false
  when: fzf_check.rc == 0

# Configure Fish as default shell
- name: Add Fish to shells
  ansible.builtin.lineinfile:
    path: /etc/shells
    line: "{{ fish_shell_path }}"
    state: present
  become: true

- name: Set Fish as default
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    shell: "{{ fish_shell_path }}"
  become: true
  when: fish_shell_set_default_shell | bool

# Install Fisher package manager
- name: Download Fisher installer
  ansible.builtin.get_url:
    url: "{{ fish_shell_fisher_install_url }}"
    dest: "{{ tmp_downloads_dir }}/fisher.fish"
    mode: '0644'

- name: Install Fisher
  ansible.builtin.shell: |
    source "{{ tmp_downloads_dir }}/fisher.fish"
    fisher install jorgebucaran/fisher
  args:
    executable: "{{ fish_shell_path }}"
  changed_when: false

# Install Fisher plugins
- name: Install Fisher plugins
  ansible.builtin.shell: "fisher install {{ item }}"
  args:
    executable: "{{ fish_shell_path }}"
  loop: "{{ fish_shell_fisher_plugins }}"
  changed_when: false
  failed_when: false

# Add custom paths to Fish
- name: Add custom paths
  ansible.builtin.shell: "fish_add_path {{ item }}"
  register: fish_add_path_result
  args:
    executable: "{{ fish_shell_path }}"
  loop: "{{ fish_shell_add_paths }}"
  changed_when: false
  failed_when: false

# Setup Docker completions
- name: Create completions directory
  ansible.builtin.file:
    path: "{{ user_config_dir }}/fish/completions"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: '0755'

- name: Install Docker completions
  ansible.builtin.command: docker completion fish
  register: docker_completion
  changed_when: false

- name: Write Docker completions to file
  ansible.builtin.copy:
    content: "{{ docker_completion.stdout }}"
    dest: "{{ user_config_dir }}/fish/completions/docker.fish"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: '0644'

- name: Remove Fish greeting
  ansible.builtin.shell: "set -U fish_greeting"
  args:
    executable: "{{ fish_shell_path }}"
  changed_when: false
